events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;
    
    # Performance optimizations
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # Main server block for OneLastAI.com
    server {
        listen 80;
        server_name onelastai.com www.onelastai.com;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS server block
    server {
        listen 443 ssl http2;
        server_name onelastai.com www.onelastai.com;
        
        # SSL Configuration (you'll need to add your certificates)
        # ssl_certificate /etc/nginx/ssl/onelastai.com.crt;
        # ssl_certificate_key /etc/nginx/ssl/onelastai.com.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Main application routes
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # API routes (for future backend)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://localhost:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Security for sensitive files
        location ~ /\. {
            deny all;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # Subdomain routing for AI agents
    
    # ARIA Chat Agent - chat.onelastai.com
    server {
        listen 443 ssl http2;
        server_name chat.onelastai.com;
        
        # SSL Configuration
        # ssl_certificate /etc/nginx/ssl/chat.onelastai.com.crt;
        # ssl_certificate_key /etc/nginx/ssl/chat.onelastai.com.key;
        
        root /usr/share/nginx/html;
        
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Agent "ARIA-Chat" always;
        }
    }
    
    # MUSE Creative Agent - creator.onelastai.com
    server {
        listen 443 ssl http2;
        server_name creator.onelastai.com;
        
        root /usr/share/nginx/html;
        
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Agent "MUSE-Creative" always;
        }
    }
    
    # EMPATHY Mood Agent - mood.onelastai.com
    server {
        listen 443 ssl http2;
        server_name mood.onelastai.com;
        
        root /usr/share/nginx/html;
        
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Agent "EMPATHY-Mood" always;
        }
    }
    
    # TRACKER IP Agent - ip.onelastai.com
    server {
        listen 443 ssl http2;
        server_name ip.onelastai.com;
        
        root /usr/share/nginx/html;
        
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Agent "TRACKER-IP" always;
        }
    }
    
    # CINEMATIC Agent - visual.onelastai.com
    server {
        listen 443 ssl http2;
        server_name visual.onelastai.com;
        
        root /usr/share/nginx/html;
        
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Agent "CINEMATIC-Visual" always;
        }
    }
    
    # BLOG Agent - blog.onelastai.com
    server {
        listen 443 ssl http2;
        server_name blog.onelastai.com;
        
        root /usr/share/nginx/html;
        
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Agent "BLOG-Content" always;
        }
    }
    
    # MEMORY Agent - memory.onelastai.com
    server {
        listen 443 ssl http2;
        server_name memory.onelastai.com;
        
        root /usr/share/nginx/html;
        
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Agent "MEMORY-Brain" always;
        }
    }
}
